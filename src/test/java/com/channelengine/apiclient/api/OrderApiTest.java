/*
 * ChannelEngine API V2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.channelengine.apiclient.api;

import com.channelengine.apiclient.ApiException;
import com.channelengine.apiclient.model.ChannelOrderRequest;
import com.channelengine.apiclient.model.CollectionOfMerchantOrderResponse;
import java.io.File;
import com.channelengine.apiclient.model.ModelApiResponse;
import com.channelengine.apiclient.model.OrderAcknowledgement;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrderApi
 */
@Ignore
public class OrderApiTest {

    private final OrderApi api = new OrderApi();

    
    /**
     * Merchant: Acknowledge Order
     *
     * For merchants.    Acknowledge an order. By acknowledging the order the merchant can confirm that  the order has been imported. When acknowledging an order the merchant has to supply  references that uniquely identify the order and the order lines. These references  will be used in the other API calls.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void orderAcknowledgeTest() throws ApiException {
        OrderAcknowledgement model = null;
        ModelApiResponse response = api.orderAcknowledge(model);

        // TODO: test validations
    }
    
    /**
     * Channel: Create Order
     *
     * For channels.    Create a new order in ChannelEngine.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void orderCreateTest() throws ApiException {
        ChannelOrderRequest model = null;
        ModelApiResponse response = api.orderCreate(model);

        // TODO: test validations
    }
    
    /**
     * Merchant: Get New Orders
     *
     * For merchants.                Fetch newly placed orders (order with status NEW).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void orderGetNewTest() throws ApiException {
        CollectionOfMerchantOrderResponse response = api.orderGetNew();

        // TODO: test validations
    }
    
    /**
     * Merchant: Download Invoice
     *
     * For merchants.    Generates the ChannelEngine VAT invoice for this order in PDF
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void orderInvoiceTest() throws ApiException {
        String merchantOrderNo = null;
        Boolean useCustomerCulture = null;
        File response = api.orderInvoice(merchantOrderNo, useCustomerCulture);

        // TODO: test validations
    }
    
    /**
     * Merchant: Download Packing Slip
     *
     * For merchants.    Generates the ChannelEngine packing slip for this order in PDF
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void orderPackingSlipTest() throws ApiException {
        String merchantOrderNo = null;
        Boolean useCustomerCulture = null;
        File response = api.orderPackingSlip(merchantOrderNo, useCustomerCulture);

        // TODO: test validations
    }
    
}
