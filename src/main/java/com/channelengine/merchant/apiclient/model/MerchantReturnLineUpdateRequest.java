/*
 * ChannelEngine Merchant API
 * ChannelEngine API for merchants
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.channelengine.merchant.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MerchantReturnLineUpdateRequest
 */

public class MerchantReturnLineUpdateRequest {
  @SerializedName("MerchantProductNo")
  private String merchantProductNo = null;

  @SerializedName("AcceptedQuantity")
  private Integer acceptedQuantity = null;

  @SerializedName("RejectedQuantity")
  private Integer rejectedQuantity = null;

  public MerchantReturnLineUpdateRequest merchantProductNo(String merchantProductNo) {
    this.merchantProductNo = merchantProductNo;
    return this;
  }

   /**
   * The unique product reference used by the Merchant (sku)
   * @return merchantProductNo
  **/
  @ApiModelProperty(required = true, value = "The unique product reference used by the Merchant (sku)")
  public String getMerchantProductNo() {
    return merchantProductNo;
  }

  public void setMerchantProductNo(String merchantProductNo) {
    this.merchantProductNo = merchantProductNo;
  }

  public MerchantReturnLineUpdateRequest acceptedQuantity(Integer acceptedQuantity) {
    this.acceptedQuantity = acceptedQuantity;
    return this;
  }

   /**
   * The amount of items that have been accepted
   * @return acceptedQuantity
  **/
  @ApiModelProperty(required = true, value = "The amount of items that have been accepted")
  public Integer getAcceptedQuantity() {
    return acceptedQuantity;
  }

  public void setAcceptedQuantity(Integer acceptedQuantity) {
    this.acceptedQuantity = acceptedQuantity;
  }

  public MerchantReturnLineUpdateRequest rejectedQuantity(Integer rejectedQuantity) {
    this.rejectedQuantity = rejectedQuantity;
    return this;
  }

   /**
   * The amount of items that have been rejected
   * @return rejectedQuantity
  **/
  @ApiModelProperty(required = true, value = "The amount of items that have been rejected")
  public Integer getRejectedQuantity() {
    return rejectedQuantity;
  }

  public void setRejectedQuantity(Integer rejectedQuantity) {
    this.rejectedQuantity = rejectedQuantity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantReturnLineUpdateRequest merchantReturnLineUpdateRequest = (MerchantReturnLineUpdateRequest) o;
    return Objects.equals(this.merchantProductNo, merchantReturnLineUpdateRequest.merchantProductNo) &&
        Objects.equals(this.acceptedQuantity, merchantReturnLineUpdateRequest.acceptedQuantity) &&
        Objects.equals(this.rejectedQuantity, merchantReturnLineUpdateRequest.rejectedQuantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantProductNo, acceptedQuantity, rejectedQuantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantReturnLineUpdateRequest {\n");
    
    sb.append("    merchantProductNo: ").append(toIndentedString(merchantProductNo)).append("\n");
    sb.append("    acceptedQuantity: ").append(toIndentedString(acceptedQuantity)).append("\n");
    sb.append("    rejectedQuantity: ").append(toIndentedString(rejectedQuantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

